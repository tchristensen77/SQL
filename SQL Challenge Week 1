## I am working my way through Danny Ma's 8 Week SQL Challenge

## Week 1: Danny's Dinner
## In this scenario, I am working for a new resturant who has started collecting data in hopes of using it to improve the business

## 1: How much has each customer spent?

SELECT sales.customer_id, SUM(price)
FROM dannys_diner.sales
JOIN dannys_diner.menu
ON sales.product_id=menu.product_id
GROUP BY sales.customer_id;

## 2. How many days has each customer visited the restaurant?

SELECT customer_id, COUNT(order_date)
FROM dannys_diner.sales
GROUP BY customer_id
ORDER BY customer_id;

## 3. What was the first item from the menu purchased by each customer?

SELECT sales.order_date, sales.customer_id, menu.product_name
FROM dannys_diner.sales
JOIN dannys_diner.menu
ON sales.product_id=menu.product_id
ORDER BY order_date;

## 4. What is the most purchased item on the menu and how many times was it purchased by all customers?

SELECT sales.customer_id, menu.product_name, COUNT(menu.product_name)
FROM dannys_diner.sales
JOIN dannys_diner.menu
ON sales.product_id=menu.product_id
GROUP BY menu.product_name, sales.customer_id
ORDER BY COUNT(menu.product_name) DESC;

## 5. Which item was the most popular for each customer?

SELECT sales.customer_id, menu.product_name, COUNT(menu.product_name)
FROM dannys_diner.sales
JOIN dannys_diner.menu
ON sales.product_id=menu.product_id
GROUP BY sales.customer_id, menu.product_name
ORDER BY COUNT(menu.product_name) DESC;

## 6. Which item was purchased first by the customer after they became a member?

SELECT sales.customer_id, sales.order_date, menu.product_name
FROM dannys_diner.sales
INNER JOIN dannys_diner.menu
ON sales.product_id=menu.product_id
INNER JOIN dannys_diner.members
ON sales.customer_id=members.customer_id
WHERE sales.customer_id IN ('A' ,'B') AND sales.order_date >= members.join_date
ORDER BY sales.order_date;

## 7. Which item was purchased just before the customer became a member?

SELECT sales.customer_id, sales.order_date, menu.product_name
FROM dannys_diner.sales
INNER JOIN dannys_diner.menu
ON sales.product_id=menu.product_id
INNER JOIN dannys_diner.members
ON sales.customer_id=members.customer_id
WHERE (sales.customer_id = 'A' AND sales.order_date < members.join_date)
OR (sales.customer_id = 'B' AND sales.order_date < members.join_date)
ORDER BY sales.order_date DESC, sales.customer_id;

## 8. What is the total items and amount spent for each member before they became a member?

SELECT sales.customer_id, SUM(menu.price)
FROM dannys_diner.sales
INNER JOIN dannys_diner.menu
ON sales.product_id=menu.product_id
INNER JOIN dannys_diner.members
ON sales.customer_id=members.customer_id
WHERE (sales.customer_id = 'A' AND sales.order_date < members.join_date)
OR (sales.customer_id = 'B' AND sales.order_date < members.join_date)
GROUP BY sales.customer_id;

## 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

WITH points_table AS (
  SELECT *,
  CASE WHEN product_id = 1 THEN price*20
  ELSE price*10
  END points
  FROM dannys_diner.menu
  )
  
 SELECT sales.customer_id, SUM(points_table.points) as total_points
 FROM points_table
 JOIN dannys_diner.sales 
 ON points_table.product_id=sales.product_id
 GROUP BY sales.customer_id

## 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi -
## How many points do customer A and B have at the end of January?



